import telebot

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather
BOT_TOKEN = '7832406550:AAGgSZ4Lh-VqMWqwijJ4-GACRYTjyt_INc8'  # –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = telebot.TeleBot(BOT_TOKEN)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —à–∞–≥–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞
user_states = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
chat_list = []

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    inline_keyboard = telebot.types.InlineKeyboardMarkup()
    add_to_chat_button = telebot.types.InlineKeyboardButton(text="‚úè –î–æ–±–∞–≤–∏—Ç—å –≤ —á–∞—Ç", url="https://t.me/CryptoTestPay_Bot?startgroup=true")  # –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    subscribe_button = telebot.types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/+wTYMzFT9ev9iYWMy")
    support_button = telebot.types.InlineKeyboardButton(text="üí∞ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", url="http://t.me/send?start=IVY5kyjDSlsV")
    settings_button = telebot.types.InlineKeyboardButton(text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data='settings')

    inline_keyboard.add(add_to_chat_button)
    inline_keyboard.add(subscribe_button)
    inline_keyboard.add(support_button)
    inline_keyboard.add(settings_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º
    start_message = "–ü—Ä–∏–≤–µ—Ç!\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ò–≥–Ω–∞—Ç–∞, —è –±–æ—Ç –¥–ª—è –±–µ—Å–µ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ.\n\n–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –±–µ—Å–µ–¥—É –∏ –¥–∞–π –º–Ω–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
    bot.send_message(message.chat.id, start_message, reply_markup=inline_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
@bot.callback_query_handler(func=lambda call: call.data == 'settings')
def settings_callback(call):
    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings_keyboard = telebot.types.InlineKeyboardMarkup()
    add_chat_to_bot_button = telebot.types.InlineKeyboardButton(text="‚úè –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç –≤ –±–æ—Ç–∞", callback_data='add_chat')
    delete_chat_button = telebot.types.InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —á–∞—Ç –∏–∑ –±–æ—Ç–∞", callback_data='delete_chat_menu')  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
    chats_button = telebot.types.InlineKeyboardButton(text="üóÇ –ß–∞—Ç—ã", callback_data='chats')
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_main')

    settings_keyboard.add(add_chat_to_bot_button)
    settings_keyboard.add(delete_chat_button)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —ç—Ç—É –∫–Ω–æ–ø–∫—É –≤—ã—à–µ
    settings_keyboard.add(chats_button)
    settings_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:", reply_markup=settings_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "‚úè –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç –≤ –±–æ—Ç–∞" (–≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫)
@bot.callback_query_handler(func=lambda call: call.data == 'add_chat')
def add_chat_callback(call):
    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —à–∞–≥–∞ 1
    add_chat_keyboard = telebot.types.InlineKeyboardMarkup()
    added_button = telebot.types.InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ ‚úÖ", callback_data='added')  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')

    add_chat_keyboard.add(added_button)
    add_chat_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    message_step1 = "üìù –®–∞–≥ 1\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞! –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å —Å–∞–º–æ–º—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –Ω–∞—à–µ–ª –≤–∞—Å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞—Ö, –Ω–æ –≤—ã –∏–º —è–≤–ª—è–µ—Ç–µ—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–±—Ä–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —á–∞—Ç–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å."
    bot.send_message(call.message.chat.id, message_step1, reply_markup=add_chat_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "–Ø –¥–æ–±–∞–≤–∏–ª(-–∞)"
@bot.callback_query_handler(func=lambda call: call.data == 'added')
def added_callback(call):
    user_id = call.from_user.id
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –®–∞–≥–∞ 2
    message_step2 = "üìù –®–∞–≥ 2\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID —á–∞—Ç–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –º–∏–Ω—É—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä -123456789):"
    step2_keyboard = telebot.types.InlineKeyboardMarkup()
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_step1')
    step2_keyboard.add(back_button)

    bot.send_message(call.message.chat.id, message_step2, reply_markup=step2_keyboard)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —à–∞–≥ 2
    user_states[user_id] = 'waiting_for_chat_id'

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ (ID —á–∞—Ç–∞)
@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == 'waiting_for_chat_id')
def handle_chat_id(message):
    user_id = message.from_user.id
    try:
        chat_id = int(message.text)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —á–∞—Ç–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –Ω–∞—á–∏–Ω–∞—é—â–µ–µ—Å—è —Å –º–∏–Ω—É—Å–∞).")
        return

    if chat_id >= 0:  # ID —á–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
        bot.send_message(message.chat.id, "ID —á–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º (–Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –º–∏–Ω—É—Å–∞).")
        return

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —á–∞—Ç —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ
        if any(chat['id'] == chat_id for chat in chat_list):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–í—ã —É–∂–µ –¥–æ–±–∞–≤–ª—è–ª–∏ —ç—Ç–æ—Ç —á–∞—Ç!" –∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            already_added_keyboard = telebot.types.InlineKeyboardMarkup()
            back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')
            already_added_keyboard.add(back_button)
            bot.send_message(message.chat.id, "–í—ã —É–∂–µ –¥–æ–±–∞–≤–ª—è–ª–∏ —ç—Ç–æ—Ç —á–∞—Ç!", reply_markup=already_added_keyboard)
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user_id in user_states:
                del user_states[user_id]
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç–µ
        chat_member = bot.get_chat_member(chat_id, bot.get_me().id)
        if chat_member.status not in ['administrator', 'creator']:
            bot.send_message(message.chat.id, "–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç–µ
        user_chat_member = bot.get_chat_member(chat_id, user_id)
        if user_chat_member.status not in ['administrator', 'creator']:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            not_admin_keyboard = telebot.types.InlineKeyboardMarkup()
            back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')
            not_admin_keyboard.add(back_button)
            bot.send_message(message.chat.id, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞. –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–±—Ä–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —á–∞—Ç–∞.", reply_markup=not_admin_keyboard)
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user_id in user_states:
                del user_states[user_id]
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ (–∏–º—è)
        chat_info = bot.get_chat(chat_id)
        chat_name = chat_info.title  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞

        # –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –≤ —Å–ø–∏—Å–æ–∫
        chat_list.append({"id": chat_id, "name": chat_name})  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏ –∏–º—è

    except telebot.apihelper.ApiTelegramException as e:
        bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è —á–∞—Ç–∞: {e}")
        return

    # –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    success_keyboard = telebot.types.InlineKeyboardMarkup()
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')
    success_keyboard.add(back_button)
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –≤–∞—à–∞ –≥—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ ‚úÖ", reply_markup=success_keyboard)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in user_states:
        del user_states[user_id]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" (–Ω–∞ —à–∞–≥–µ 1)
@bot.callback_query_handler(func=lambda call: call.data == 'back_to_step1')
def back_to_step1_callback(call):
    user_id = call.from_user.id
    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —à–∞–≥–∞ 1
    add_chat_keyboard = telebot.types.InlineKeyboardMarkup()
    added_button = telebot.types.InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ ‚úÖ", callback_data='added')  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')

    add_chat_keyboard.add(added_button)
    add_chat_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    message_step1 = "üìù –®–∞–≥ 1\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞! –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å —Å–∞–º–æ–º—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –Ω–∞—à–µ–ª –≤–∞—Å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞—Ö, –Ω–æ –≤—ã –∏–º —è–≤–ª—è–µ—Ç–µ—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–±—Ä–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —á–∞—Ç–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å."
    bot.send_message(call.message.chat.id, message_step1, reply_markup=add_chat_keyboard)
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in user_states:
        del user_states[user_id]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" (–≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫)
@bot.callback_query_handler(func=lambda call: call.data == 'back_to_main')
def back_to_main_callback(call):
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    start(call.message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" (–≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫)
@bot.callback_query_handler(func=lambda call: call.data == 'back_to_settings')
def settings_callback(call):
    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    settings_keyboard = telebot.types.InlineKeyboardMarkup()
    add_chat_to_bot_button = telebot.types.InlineKeyboardButton(text="‚úè –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç –≤ –±–æ—Ç–∞", callback_data='add_chat')
    delete_chat_button = telebot.types.InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —á–∞—Ç –∏–∑ –±–æ—Ç–∞", callback_data='delete_chat_menu')  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
    chats_button = telebot.types.InlineKeyboardButton(text="üóÇ –ß–∞—Ç—ã", callback_data='chats')
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_main')

    settings_keyboard.add(add_chat_to_bot_button)
    settings_keyboard.add(delete_chat_button)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —ç—Ç—É –∫–Ω–æ–ø–∫—É –≤—ã—à–µ
    settings_keyboard.add(chats_button)
    settings_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:", reply_markup=settings_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å —á–∞—Ç –∏–∑ –±–æ—Ç–∞"
@bot.callback_query_handler(func=lambda call: call.data == 'delete_chat_menu')
def delete_chat_menu_callback(call):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —á–∞—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    if not chat_list:
        no_chats_keyboard = telebot.types.InlineKeyboardMarkup()
        back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')
        no_chats_keyboard.add(back_button)
        bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç. –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å.", reply_markup=no_chats_keyboard)
        return

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —á–∞—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    delete_chat_keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    for chat in chat_list:
        delete_button = telebot.types.InlineKeyboardButton(text=chat["name"], callback_data=f"confirm_delete_{chat['id']}")
        delete_chat_keyboard.add(delete_button)

    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')
    delete_chat_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –±–æ—Ç–∞:", reply_markup=delete_chat_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith('confirm_delete_'))
def confirm_delete_callback(call):
    chat_id = call.data[15:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback_data

    # –ù–∞—Ö–æ–¥–∏–º –∏–º—è —á–∞—Ç–∞ –ø–æ ID
    chat_name = ""
    for chat in chat_list:
        if str(chat['id']) == chat_id:
            chat_name = chat['name']
            break

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    confirm_keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    yes_button = telebot.types.InlineKeyboardButton(text="–î–∞ ‚úÖ", callback_data=f"delete_{chat_id}")
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='delete_chat_menu')
    confirm_keyboard.add(yes_button)
    confirm_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    bot.send_message(call.message.chat.id, f"–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —á–∞—Ç \"{chat_name}\"?", reply_markup=confirm_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith('delete_'))
def delete_callback(call):
    chat_id = call.data[7:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback_data

    # –ù–∞—Ö–æ–¥–∏–º –∏–º—è —á–∞—Ç–∞ –ø–æ ID –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
    chat_name = ""
    for chat in chat_list:
        if str(chat['id']) == chat_id:
            chat_name = chat['name']
            break

    # –£–¥–∞–ª—è–µ–º —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
    chat_list[:] = [chat for chat in chat_list if str(chat['id']) != chat_id]  # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    success_keyboard = telebot.types.InlineKeyboardMarkup()
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')  # –≤–æ–∑–≤—Ä–∞—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    success_keyboard.add(back_button)
    bot.send_message(call.message.chat.id, f"–ß–∞—Ç \"{chat_name}\" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω ‚úÖ", reply_markup=success_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è inline-–∫–Ω–æ–ø–∫–∏ "üóÇ –ß–∞—Ç—ã"
@bot.callback_query_handler(func=lambda call: call.data == 'chats')
def chats_callback(call):
    # –°–æ–∑–¥–∞–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
    chats_keyboard = telebot.types.InlineKeyboardMarkup(row_width=1) # –ß—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –±—ã–ª–∏ –≤ —Å—Ç–æ–ª–±–∏–∫

    if not chat_list:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç." –∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        empty_keyboard = telebot.types.InlineKeyboardMarkup()
        back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')
        empty_keyboard.add(back_button)
        bot.send_message(call.message.chat.id, "–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç.", reply_markup=empty_keyboard)

        return

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
    for chat in chat_list:
        chat_button = telebot.types.InlineKeyboardButton(text=chat["name"], callback_data=f"chat_{chat['id']}")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –¥–ª—è callback_data
        chats_keyboard.add(chat_button)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_settings')
    chats_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —á–∞—Ç–æ–≤
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç:", reply_markup=chats_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞ (–∑–¥–µ—Å—å –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —á–∞—Ç–∞)
@bot.callback_query_handler(func=lambda call: call.data.startswith('chat_'))
def chat_button_callback(call):
    chat_id = call.data[5:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback_data (—É–±–∏—Ä–∞–µ–º "chat_")
    user_id = call.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–º—è
    selected_chat = next((chat for chat in chat_list if str(chat['id']) == chat_id), None)
    if selected_chat:
        chat_name = selected_chat["name"]
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –≤ user_states –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[user_id] = user_states.get(user_id, {})
        user_states[user_id]['chat_id'] = chat_id
    else:
        chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –µ—Å–ª–∏ —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω

    # –°–æ–∑–¥–∞–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
    chat_keyboard = telebot.types.InlineKeyboardMarkup(row_width=1) # –ö–Ω–æ–ø–∫–∏ –≤ —Å—Ç–æ–ª–±–∏–∫
    activity_button = telebot.types.InlineKeyboardButton(text="üìä –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞", callback_data=f"activity_{chat_id}")
    ads_button = telebot.types.InlineKeyboardButton(text="üìõ –†–µ–∫–ª–∞–º–∞ –≤ —á–∞—Ç–µ", callback_data=f"ads_{chat_id}")
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_chatlist')

    chat_keyboard.add(activity_button)
    chat_keyboard.add(ads_button)
    chat_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
    bot.send_message(call.message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–∞—Ç \"{chat_name}\" üì£\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:", reply_markup=chat_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞"
@bot.callback_query_handler(func=lambda call: call.data.startswith('activity_'))
def activity_callback(call):
    chat_id = call.data[9:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback_data (—É–±–∏—Ä–∞–µ–º "activity_")
    user_id = call.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–∞—Ç–∞ –∏–∑ user_states
    chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
    if user_id in user_states and 'chat_id' in user_states[user_id]:
        selected_chat_id = user_states[user_id]['chat_id']
        selected_chat = next((chat for chat in chat_list if str(chat['id']) == selected_chat_id), None)
        if selected_chat:
            chat_name = selected_chat["name"]

    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    activity_message = "1 - 20 % –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n" \
                       "2 - 40 % –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n" \
                       "3 - 60 % –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n" \
                       "4 - 80 % –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n" \
                       "5 - 100 % –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n\n" \
                       "–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –≤ –≤–∞—à–µ–º —á–∞—Ç–µ:"

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—Ä–æ–≤–Ω—è–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    activity_keyboard = telebot.types.InlineKeyboardMarkup(row_width=5)
    btn1 = telebot.types.InlineKeyboardButton(text="1", callback_data=f"set_activity_{chat_id}_20")
    btn2 = telebot.types.InlineKeyboardButton(text="2", callback_data=f"set_activity_{chat_id}_40")
    btn3 = telebot.types.InlineKeyboardButton(text="3", callback_data=f"set_activity_{chat_id}_60")
    btn4 = telebot.types.InlineKeyboardButton(text="4", callback_data=f"set_activity_{chat_id}_80")
    btn5 = telebot.types.InlineKeyboardButton(text="5", callback_data=f"set_activity_{chat_id}_100")
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"back_to_chat_{chat_id}")

    activity_keyboard.add(btn1, btn2, btn3, btn4, btn5)  # –ö–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Ä—è–¥
    activity_keyboard.add(back_button) # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –ø–æ–¥ —É—Ä–æ–≤–Ω—è–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

    bot.send_message(call.message.chat.id, activity_message, reply_markup=activity_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–†–µ–∫–ª–∞–º–∞ –≤ —á–∞—Ç–µ"
@bot.callback_query_handler(func=lambda call: call.data.startswith('ads_'))
def ads_callback(call):
    chat_id = call.data[4:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback_data (—É–±–∏—Ä–∞–µ–º "ads_")
    user_id = call.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–∞—Ç–∞ –∏–∑ user_states
    chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
    if user_id in user_states and 'chat_id' in user_states[user_id]:
        selected_chat_id = user_states[user_id]['chat_id']
        selected_chat = next((chat for chat in chat_list if str(chat['id']) == selected_chat_id), None)
        if selected_chat:
            chat_name = selected_chat["name"]
    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    ads_message = "–ï—Å–ª–∏ –≤–∫–ª—é—á–∏—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, —Ç–æ –±–æ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å—Å—ã–ª–∫–∞–º–∏ üìõ.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:"

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã
    ads_keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
    enable_button = telebot.types.InlineKeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å ‚úÖ", callback_data=f"enable_ads_{chat_id}")
    disable_button = telebot.types.InlineKeyboardButton(text="–í—ã–∫–ª—é—á–∏—Ç—å ‚õî", callback_data=f"disable_ads_{chat_id}")
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"back_to_chat_{chat_id}")

    ads_keyboard.add(enable_button, disable_button)
    ads_keyboard.add(back_button)

    bot.send_message(call.message.chat.id, ads_message, reply_markup=ads_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã
@bot.callback_query_handler(func=lambda call: call.data.startswith('enable_ads_'))
def enable_ads_callback(call):
    chat_id = call.data[11:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback_data (—É–±–∏—Ä–∞–µ–º "enable_ads_")
    user_id = call.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–∞—Ç–∞ –∏–∑ user_states
    chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
    if user_id in user_states and 'chat_id' in user_states[user_id]:
        selected_chat_id = user_states[user_id]['chat_id']
        selected_chat = next((chat for chat in chat_list if str(chat['id']) == selected_chat_id), None)
        if selected_chat:
            chat_name = selected_chat["name"]
    enable_message = "–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —Å—Å—ã–ª–∫—É –±—É–¥—É—Ç —É–¥–∞–ª—è—Ç—å—Å—è ‚úÖ"

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —á–∞—Ç–∞
    back_keyboard = telebot.types.InlineKeyboardMarkup()
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"back_to_chat_{chat_id}")
    back_keyboard.add(back_button)

    bot.send_message(call.message.chat.id, enable_message, reply_markup=back_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã
@bot.callback_query_handler(func=lambda call: call.data.startswith('disable_ads_'))
def disable_ads_callback(call):
    chat_id = call.data[12:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —á–∞—Ç–∞ –∏–∑ callback_data (—É–±–∏—Ä–∞–µ–º "disable_ads_")
    user_id = call.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–∞—Ç–∞ –∏–∑ user_states
    chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
    if user_id in user_states and 'chat_id' in user_states[user_id]:
        selected_chat_id = user_states[user_id]['chat_id']
        selected_chat = next((chat for chat in chat_list if str(chat['id']) == selected_chat_id), None)
        if selected_chat:
            chat_name = selected_chat["name"]

    disable_message = "–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —Å—Å—ã–ª–∫—É –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚õî"

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —á–∞—Ç–∞
    back_keyboard = telebot.types.InlineKeyboardMarkup()
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"back_to_chat_{chat_id}")
    back_keyboard.add(back_button)

    bot.send_message(call.message.chat.id, disable_message, reply_markup=back_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
@bot.callback_query_handler(func=lambda call: call.data.startswith('set_activity_'))
def set_activity_callback(call):
    data = call.data[13:]  # —É–±–∏—Ä–∞–µ–º "set_activity_"
    chat_id, activity_level = data.rsplit('_', 1)  # –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ —Å–ø—Ä–∞–≤–∞
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–∞—Ç–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —á–∞—Ç–∞
    user_id = call.from_user.id

    activity_text = f"–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –≤ –≤–∞—à–µ–º —á–∞—Ç–µ - {activity_level} üìä"  # –ó–∞–º–µ–Ω–∞ –∑–¥–µ—Å—å

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —á–∞—Ç–∞
    back_keyboard = telebot.types.InlineKeyboardMarkup()
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"back_to_chat_{chat_id}")
    back_keyboard.add(back_button)

    bot.send_message(call.message.chat.id, activity_text, reply_markup=back_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" (–∏–∑ –º–µ–Ω—é —á–∞—Ç–∞)
@bot.callback_query_handler(func=lambda call: call.data.startswith('back_to_chat_'))
def back_to_chat_callback(call):
    user_id = call.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ user_states
    chat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
    chat_id = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º chat_id
    if user_id in user_states and 'chat_id' in user_states[user_id]:
        chat_id = user_states[user_id]['chat_id']  # –ü–æ–ª—É—á–∞–µ–º chat_id
        selected_chat_id = user_states[user_id]['chat_id']
        selected_chat = next((chat for chat in chat_list if str(chat['id']) == selected_chat_id), None)
        if selected_chat:
            chat_name = selected_chat["name"]

    # –°–æ–∑–¥–∞–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
    chat_keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)  # –ö–Ω–æ–ø–∫–∏ –≤ —Å—Ç–æ–ª–±–∏–∫
    activity_button = telebot.types.InlineKeyboardButton(text="üìä –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞", callback_data=f"activity_{chat_id}")
    ads_button = telebot.types.InlineKeyboardButton(text="üìõ –†–µ–∫–ª–∞–º–∞ –≤ —á–∞—Ç–µ", callback_data=f"ads_{chat_id}")
    back_button = telebot.types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_to_chatlist')

    chat_keyboard.add(activity_button)
    chat_keyboard.add(ads_button)
    chat_keyboard.add(back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
    bot.send_message(call.message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–∞—Ç \"{chat_name}\" üì£\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:",
                    reply_markup=chat_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" (–∏–∑ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤)
@bot.callback_query_handler(func=lambda call: call.data == 'back_to_chatlist')
def back_to_chatlist_callback(call):
    chats_callback(call)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —á–∞—Ç–æ–≤

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö callback_query (–¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
@bot.callback_query_handler(func=lambda call: True)
def callback_query_handler(call):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ callback_query
    pass

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
@bot.message_handler(content_types=['new_chat_members'])
def new_member(message):
    # –ï—Å–ª–∏ –±–æ—Ç–∞ –¥–æ–±–∞–≤–∏–ª–∏ –≤ –≥—Ä—É–ø–ø—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.new_chat_members[0].id == bot.get_me().id:
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –º–µ–Ω—è! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–¥–∞—Ç—å –º–Ω–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

if __name__ == '__main__':
    bot.polling(none_stop=True)